apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
//	compileOptions {
//		sourceCompatibility JavaVersion.VERSION_1_8
//		targetCompatibility JavaVersion.VERSION_1_8
//	}
//	kotlinOptions {
//		jvmTarget = '1.8'
//	}
//	kotlin {
//		jvmToolchain(8)
//	}
	namespace 'com.perry.audiorecorder'
	compileSdkVersion 34
	defaultConfig {
		applicationId "com.perry.audiorecorder"
		minSdkVersion 24
		targetSdkVersion 34
		versionCode 933
		versionName "0.9.33"
	}

	buildFeatures {
		viewBinding true
	}

	def keystorePropertiesFile = rootProject.file("keystore.properties")
	def keystoreProperties = new Properties()
	keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

	signingConfigs {
		dev {
			storeFile file('key/debug/debug.keystore')
			storePassword 'android'
			keyAlias 'androiddebugkey'
			keyPassword 'android'
		}
		release {
			storeFile file(keystoreProperties['prodStoreFile'])
			storePassword keystoreProperties['prodStorePassword']
			keyAlias keystoreProperties['prodKeyAlias']
			keyPassword keystoreProperties['prodKeyPassword']
		}
	}

	buildTypes {
		release {
			minifyEnabled true
			shrinkResources true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//			firebaseCrashlytics {
//				mappingFileUploadEnabled true
//			}
		}
		debug {
			minifyEnabled false
		}
	}

	flavorDimensions "default"

	productFlavors {
		debugConfig {
			dimension "default"
			applicationId "com.perry.audiorecorder.debug"
			signingConfig = signingConfigs.dev
		}
		releaseConfig {
			dimension "default"
			signingConfig = signingConfigs.dev
			applicationId "com.perry.audiorecorder"
		}
	}

	compileOptions {
		sourceCompatibility = JavaVersion.VERSION_1_8
		targetCompatibility = JavaVersion.VERSION_1_8
	}

	lintOptions {
		abortOnError false
	}
}

//tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile.class){
//	kotlinOptions {
//		jvmTarget = "1.8"
//	}
//}

// Remove not needed buildVariants.
android.variantFilter { variant ->
	if (variant.buildType.name == 'release'
			&& variant.getFlavors().get(0).name == 'debugConfig') {
		variant.setIgnore(true)
	}
	if (variant.buildType.name == 'debug'
			&& variant.getFlavors().get(0).name == 'releaseConfig') {
		variant.setIgnore(true)
	}
}

dependencies {
	def androidX = "1.3.0"
	def coroutines = "1.6.1"
	def timber = "5.0.1"
	implementation fileTree(dir: 'libs', include: ['*.jar'])
	implementation files('libs/AIKit.aar')
//	implementation project(path: ':paddleSpeech')
//	implementation project(path: ':paddlespeech_tts_cpp')
	//Kotlin
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"

	//Timber
	api "com.jakewharton.timber:timber:$timber"
	api "androidx.recyclerview:recyclerview:$androidX"

	implementation "androidx.viewpager2:viewpager2:1.0.0"
	implementation 'androidx.appcompat:appcompat:1.6.1'
	implementation 'com.google.android.material:material:1.10.0'
	implementation 'org.xutils:xutils:3.8.12'
	implementation 'com.alibaba.fastjson2:fastjson2:2.0.42.android4'
}
